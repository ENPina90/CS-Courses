/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

* {
  margin: 0;
  padding: 0;
  /* includes margin & body in width */
  box-sizing: border-box;
}

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  font-size: 16px;
  line-height: 1.7;
  color: #777;
  padding: 30px;
}

.header {
  height: 95vh;
  background-image: linear-gradient(
    to right bottom,
    rgba(126, 213, 111, 0.799),
    rgba(40, 180, 133, 0.798)),
  url(../img/hero.jpg);
  background-size: cover;
  background-position: top;
  position: relative;
  /* polygon top, right, bottom right, bottom left */
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100% );
  /* make a triangle      100% width to the right, 50% of the height down*/
  /* clip-path: polygon(0 0, 100% 50%, 0 100% ); */
}

.logo-box {
  position: absolute;
  top: 40px;
  left: 40px;
}
.logo {
  height: 35px;
}

.text-box {
  position: absolute;
  top: 40%;
  left: 50%;
  /* 50% of the parent element is where the box will start! so must... */
  transform: translate(-50%, -50%)
}

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  /* hack fix for occasional shaking that comes with animations */
  backface-visibility: hidden;
}

.heading-primary-main {
  display: block;
  font-size: 60px;
  font-weight: 400;
  letter-spacing: 35px;

  /* must reference animation */
  animation-name: moveInLeft;
  /* how long animation will last */
  animation-duration: 1s;
  /* speed of animation at beginning and end */
  animation-timing-function: ease-out;

  /* delay before start. number of times repeated
  animation-delay: 3s;
  animation-iteration-count: 3; */
}

.heading-primary-sub {
  display: block;
  font-size: 20px;
  font-weight: 700;
  letter-spacing: 17.4px;
  /* combine animation name duration timing into one line */
  animation: moveInRight 1s ease-out;
}

@keyframes moveInLeft {
  /* can have any number of % breakpoints with unique rules */
  0% {
    opacity: 0;
    transform: translateX(-100px)
  }

  80% {
    transform: translateX(10px)
  }

  100% {
    opacity: 1;
    transform: translate(0);
  }
}

@keyframes moveInRight {
  /* can have any number of % breakpoints with unique rules */
  0% {
    opacity: 0;
    transform: translateX(100px)
  }

  80% {
    transform: translateX(-10px)
  }

  100% {
    opacity: 1;
    transform: translate(0);
  }
}
