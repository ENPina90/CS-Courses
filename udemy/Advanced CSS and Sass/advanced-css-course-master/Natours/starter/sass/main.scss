/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/
$color-primary: #55c57a;
$color-primary-light: #7ed56f;
$color-primary-dark: #28b485;

*,
*::before,
*::after {
  /* selects everything including pseudo */
  margin: 0;
  padding: 0;
  /* includes padding & body in width, but not margin! */
  box-sizing: border-box;
}


html {
  /* root font size must be set in html{} */
  /* Do this early in the project and work with rem EVERYWHERE  */
  font-size: 62.5%;
  /* if we set the font size to 10px then it overides users ability to change font size */
  /* instead we set it to a percentage, default(100%) is 16px. Hard to work with! */
  /* We 100 / 16 = 62.5 (~10px) */
}

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  font-size: 1.6rem;
  line-height: 1.7;
  color: #777;
  padding: 3rem;
}



.header {
  height: 95vh;
  background-image: linear-gradient(
    to right bottom,
    rgba($color-primary-light, 0.8),
    rgba($color-primary-light, 0.8)),
  url(../img/hero.jpg);
  background-size: cover;
  background-position: top;
  position: relative;
  /* polygon top, right, bottom right, bottom left */
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100% );
  /* make a triangle      100% width to the right, 50% of the height down*/
  /* clip-path: polygon(0 0, 100% 50%, 0 100% ); */
}

.header__logo-box {
  position: absolute;
  top: 4rem;
  left: 4rem;
}
.header__logo {
  height: 3.5rem;
}

.header__text-box {
  position: absolute;
  top: 40%;
  left: 50%;
  text-align: center;
  /* 50% of the parent element is where the box will start! so must... */
  transform: translate(-50%, -50%)
}

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  margin-bottom: 6rem;
  /* hack fix for occasional shaking that comes with animations */
  backface-visibility: hidden;
}

.heading-primary--main {
  display: block;
  font-size: 6rem;
  font-weight: 400;
  letter-spacing: 3.5rem;

  /* must reference animation */
  animation-name: moveInLeft;
  /* how long animation will last */
  animation-duration: 1s;
  /* speed of animation at beginning and end */
  animation-timing-function: ease-out;

  /* delay before start. number of times repeated
  animation-delay: 3s;
  animation-iteration-count: 3; */
}

.heading-primary--sub {
  display: block;
  font-size: 2rem;
  font-weight: 700;
  letter-spacing: 1.75rem;
  /* combine animation name duration timing into one line */
  animation: moveInRight 1s ease-out;
}

@keyframes moveInLeft {
  /* can have any number of % breakpoints with unique rules */
  0% {
    opacity: 0;
    transform: translateX(-1rem)
  }

  80% {
    transform: translateX(1rem)
  }

  100% {
    opacity: 1;
    transform: translate(0);
  }
}

@keyframes moveInRight {
  /* can have any number of % breakpoints with unique rules */
  0% {
    opacity: 0;
    transform: translateX(10rem)
  }

  80% {
    transform: translateX(-1rem)
  }

  100% {
    opacity: 1;
    transform: translate(0);
  }
}

@keyframes moveUp {
  /* can have any number of % breakpoints with unique rules */
  0% {
    opacity: 0;
    transform: translateY(10rem)
  }

  100% {
    opacity: 1;
    transform: translate(0);
  }
}

.btn:link,
.btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  padding: 1.5rem 4rem;
  border-radius: 5rem;
  /* if elements are overlapping use display block instead of margins */
  display: inline-block;
  /* transition always goes on the initial state, even if its triggered in a pseudo */
  transition: all .2s;
  /* necessary for btn:after */
  position: relative;
}

/* create an up an down effect on the button */
.btn:hover {
  transform: translateY(-.3rem);
  /*          x  y   blur   color         opacity*/
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, .2);
}

.btn:active {
  /* active = when clicked. Not relative to hover state, but from initial state */
  transform: translateX(-.1rem);
  /* We want to shrink the shadow when clicked so button it appears closer to the page */
  box-shadow: 0 .5rem 1rem rgba(0, 0, 0, .2);
}

.btn--white {
  background-color: #fff;
  color: #777;
}

.btn::after {
  /* adds a virtual element after the element we are selecting .btn */
  content: "";
  display: inline-block;
  height: 100%;
  width: 100%;
  /* % of initial element .btn */
  border-radius: 10rem;
  /* hide element behind actual button */
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  /* transition for hover effect */
  transition: all .4s;
}

.btn--white::after {
  background-color: #fff;
}Ã¥

.btn:hover::after {
  transform: scaleX(1.4) scaleY(1.6);
  opacity: 0;
}

.btn--animated {
  /*                duration     delay */
  animation: moveUp .5s ease-out .5s;
  /* prevents button from show up before animation is triggered */
  animation-fill-mode: backwards;
  /* sets initial state of page to be opposite of ending state of animation */
}


